2. Understand Arrays, String Manipulation & OPPS Concepts in JAVA                                                                                                   
Okay, now take a step forward and start to learn the concepts like Array, Strings, etc in JAVA. You’re required to understand how to create an Array & access its elements, Strings in JAVA, and other related concepts. 

Arrays | Strings
Array vs ArrayList in Java
Scope of Variables
Type Conversion in Java
Switch Statement in Java                                                                                                                                                                                                                                                                                                                                                                    et Familiar with Classes, Objects & Methods
After going through the above-mentioned topics. Now, you’re required to understand the basic building blocks of JAVA i.e, Classes & Objects. You’re required to understand what are the Classes in JAVA, how to create an Object, etc thoroughly. Moreover, you need to learn about the Methods in JAVA, what are their significance, and how to create & use them. You also need to learn about Constructors which is a crucial part of JAVA programming.

Classes & Objects
Methods in Java
Method Overloading | Method Overriding
Parameter Passing in JAVA
Constructors in Java    
Inheritance
Polymorphism
Abstraction
Encapsulation


                         
Inheritance Program in Java
class Animal
{  
	void eat()
	{	
		System.out.println("EAT");
	}  
}  
class Dog extends Animal
{  
	void bark()
	{
		System.out.println("BARK");
	}  
}  
class TestInheritance
{  
	public static void main(String args[])
	{  
		Dog d=new Dog();  
		d.bark();  //output would be BARK
		d.eat();  //output would be just EAT
	}	
}    



Polymorphism Program in Java
class Bike
{  
  	void run()
	{	
		System.out.println("running");
	}  
}  
class Splendor extends Bike
{  
  	void run()
	{
		System.out.println("running safely with 60km");
	}  
  
  	public static void main(String args[])
	{  
    		Bike b = new Splendor();//upcasting  
    		b.run();  
  	}  
}  



Abstraction Program in Java
abstract class Shape   
{  
	public abstract void draw();  
}  
class Circle extends Shape  
{  
	public void draw()   
	{  
		System.out.println("Circle!");  
	}  
}  

public class Test   
{  
	public static void main(String[] args)   
	{  
		Shape circle = new Circle();  
		circle.draw();  
	}  
}



Encapsulation Program in Java  
public class EncapsulationDemo  
{    	public static void main(String[] args)   
	{        
		Account acc=new Account();    
		acc.setAcc_no(7560504000L);    
		acc.setName("Mark Dennis");    
		acc.setEmail("md123@gmail.com");    
		acc.setAmount(500000f);    
		System.out.println(acc.getAcc_no()+" "+acc.getName()+" "+acc.getEmail()+" "+acc.getAmount());    
	}    
}                      